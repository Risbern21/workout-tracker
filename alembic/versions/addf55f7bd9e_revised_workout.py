"""revised workout

Revision ID: addf55f7bd9e
Revises: e75eeb3193f4
Create Date: 2025-09-13 10:24:51.155166

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'addf55f7bd9e'
down_revision: Union[str, Sequence[str], None] = 'e75eeb3193f4'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Workout',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('excercise_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('reps', sa.Integer(), nullable=False),
    sa.Column('sets', sa.Integer(), nullable=False),
    sa.Column('rest', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['excercise_id'], ['excercises.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('workout')
    op.drop_table('workouts')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('workouts',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('workout_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('workouts_user_id_fkey')),
    sa.ForeignKeyConstraint(['workout_id'], ['workout.id'], name=op.f('workouts_workout_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('workouts_pkey'))
    )
    op.create_table('workout',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('excercise_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('reps', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('sets', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('rest', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['excercise_id'], ['excercises.id'], name=op.f('workout_excercise_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('workout_pkey'))
    )
    op.drop_table('Workout')
    # ### end Alembic commands ###
